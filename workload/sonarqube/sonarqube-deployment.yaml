apiVersion: apps/v1
kind: Deployment
metadata:
 name: sonarqube
 namespace: sonarqube
spec:
  selector:
    matchLabels:
     app: sonarqube-deployment
  replicas: 1
  template:
    metadata:
      name: sonarqube
      labels:
        app: sonarqube-deployment
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:latest
        args:
          - '-Dsonar.web.context=/sonar'
          - '-Dsonar.search.javaAdditionalOpts=-Dnode.store.allow_mmap=false'
        resources:
          requests:
            cpu: 400m
            memory: 2Gi
          limits:
            cpu: 800m
            memory: 3Gi
        env:
          - name: sonar.jdbc.username
            value: "postgres"
          - name: sonar.jdbc.url
            value: "jdbc:postgresql://postgres:5432/sonarqube"
          - name: sonar.jdbc.password
            value: "root"
        ports:
          - containerPort: 9000
            protocol: TCP
        volumeMounts:
        - mountPath: /opt/sonarqube/data/
          name: data
        - mountPath: /opt/sonarqube/extensions/
          name: extensions        
        - mountPath: /opt/sonarqube/conf
          name: conf
        - mountPath: /opt/sonarqube/logs/
          name: logs
      volumes:
      - name: data
        persistentVolumeClaim:
            claimName: data
      - name: extensions
        persistentVolumeClaim:
            claimName: extensions
      - name: conf
        persistentVolumeClaim:
            claimName: conf
      - name: logs
        persistentVolumeClaim:
            claimName: logs